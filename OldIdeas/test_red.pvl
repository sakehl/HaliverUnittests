resource _int32_pred(int[] data) = data != null ** (\forall* int i; 0<=i && i< data.length; Perm(data[i], write) );

  // context data != null;
  context_everywhere data != null;
  context [1\2]_int32_pred(data);
  context (\forall int i; 0 <= i && i < data.length; \unfolding [1\2]_int32_pred(data) \in data[i] == i);
void main(int[] data ){
  int sum = 0;
    loop_invariant 0 <= i && i <= data.length;
    loop_invariant [1\2]_int32_pred(data);
    //loop_invariant \unfolding [1\2]_int32_pred(data) \in (\forall int i; 0 <= i && i < data.length; data[i] == i);
    loop_invariant (\forall int i; 0 <= i && i < data.length; \unfolding [1\2]_int32_pred(data) \in data[i] == i);
  for(int i=0; i<data.length; i++){
    unfold [1\2]_int32_pred(data);
    sum = sum + data[i];
    fold [1\2]_int32_pred(data);
  }
  // par(int j=0..10)

  // {
  //   par(int i=0..3)
  //     context [1\(2*10*3)]_int32_pred(data);
  //     context (\forall int i; 0 <= i && i < data.length; \unfolding [1\2]_int32_pred(data) \in data[i] == i);
  //   {
  //     unfold [1\(2*data.length)]_int32_pred(data);
  //     assert (data[i] == i);
  //     fold [1\(2*data.length)]_int32_pred(data);
  //   }
  // }
}