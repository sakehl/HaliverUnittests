context inp != null && inp.length == 300;
context out != null && out.length == 300;
context (\forall* int i=0..300; true ; Perm(inp[i], read));
context (\forall* int i=0..300; true ; Perm(out[i], 1\1));
requires inp != out;
void unrollouter(int[] inp, int[] out) {
 // produce out
  loop_invariant 0 <= x && x <= 0 + 100;
  loop_invariant (\forall* int i=0..300; true ; Perm(inp[i], read));
  loop_invariant (\forall* int i=0..100; true ; Perm(out[i], 1\1));
 for (int x = 0; x < 0 + 100; x++)
 {
  out[x] = (inp[(x * 3)] + 1);
 }
  loop_invariant 0 <= x && x <= 0 + 100;
  loop_invariant (\forall* int i=0..300; true ; Perm(inp[i], read));
  loop_invariant (\forall* int i=100..200; true ; Perm(out[i], 1\1));
 for (int x = 0; x < 0 + 100; x++)
 {
  out[(x + 100)] = (inp[((x * 3) + 1)] + 1);
 }
  loop_invariant 0 <= x && x <= 0 + 100;
  loop_invariant (\forall* int i=0..300; true ; Perm(inp[i], read));
  loop_invariant (\forall* int i=200..300; true ; Perm(out[i], 1\1));
 for (int x = 0; x < 0 + 100; x++)
 {
  out[(x + 200)] = (inp[((x * 3) + 2)] + 1);
 }
}